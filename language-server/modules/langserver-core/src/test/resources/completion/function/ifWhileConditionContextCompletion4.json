{
  "position": {
    "line": 4,
    "character": 21
  },
  "source": "function/source/ifWhileConditionContextCompletion4.bal",
  "items": [
    {
      "label": "HttpServiceConfig",
      "kind": "Variable",
      "detail": "HttpServiceConfig",
      "documentation": {
        "left": "Contains the configurations for an HTTP service.\n"
      },
      "sortText": "130",
      "insertText": "HttpServiceConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CorsConfig",
      "kind": "Variable",
      "detail": "CorsConfig",
      "documentation": {
        "left": "Configurations for CORS support.\n"
      },
      "sortText": "130",
      "insertText": "CorsConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Versioning",
      "kind": "Variable",
      "detail": "Versioning",
      "documentation": {
        "left": "Configurations for service versioning.\n"
      },
      "sortText": "130",
      "insertText": "Versioning",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WSServiceConfig",
      "kind": "Variable",
      "detail": "WSServiceConfig",
      "documentation": {
        "left": "Configurations for a WebSocket service.\n"
      },
      "sortText": "130",
      "insertText": "WSServiceConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpResourceConfig",
      "kind": "Variable",
      "detail": "HttpResourceConfig",
      "documentation": {
        "left": "Configuration for an HTTP resource.\n"
      },
      "sortText": "130",
      "insertText": "HttpResourceConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketUpgradeConfig",
      "kind": "Variable",
      "detail": "WebSocketUpgradeConfig",
      "documentation": {
        "left": "Resource configuration to upgrade from HTTP to WebSocket.\n"
      },
      "sortText": "130",
      "insertText": "WebSocketUpgradeConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ServiceAuth",
      "kind": "Variable",
      "detail": "ServiceAuth",
      "documentation": {
        "left": "Configures the authentication scheme for a service.\n"
      },
      "sortText": "130",
      "insertText": "ServiceAuth",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResourceAuth",
      "kind": "Variable",
      "detail": "ResourceAuth",
      "documentation": {
        "left": "Configures the authentication scheme for a resource.\n"
      },
      "sortText": "130",
      "insertText": "ResourceAuth",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AuthzHandler",
      "kind": "Variable",
      "detail": "AuthzHandler",
      "documentation": {
        "left": "Representation of Authorization Handler for HTTP.\n"
      },
      "sortText": "130",
      "insertText": "AuthzHandler",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InboundAuthHandler",
      "kind": "Variable",
      "detail": "InboundAuthHandler",
      "documentation": {
        "left": "The representation of an inbound authentication handler for HTTP traffic."
      },
      "sortText": "130",
      "insertText": "InboundAuthHandler",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "OutboundAuthHandler",
      "kind": "Variable",
      "detail": "OutboundAuthHandler",
      "documentation": {
        "left": "The representation of an outbound authentication handler for HTTP traffic."
      },
      "sortText": "130",
      "insertText": "OutboundAuthHandler",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CredentialBearer",
      "kind": "Variable",
      "detail": "CredentialBearer",
      "documentation": {
        "left": "Specifies how to send the authentication credentials when exchanging tokens."
      },
      "sortText": "130",
      "insertText": "CredentialBearer",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InboundAuthHandlers",
      "kind": "Variable",
      "detail": "InboundAuthHandlers",
      "documentation": {
        "left": "Represents inbound auth handler patterns."
      },
      "sortText": "130",
      "insertText": "InboundAuthHandlers",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Scopes",
      "kind": "Variable",
      "detail": "Scopes",
      "documentation": {
        "left": "Represents scopes patterns."
      },
      "sortText": "130",
      "insertText": "Scopes",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RequestCacheControl",
      "kind": "Variable",
      "detail": "RequestCacheControl",
      "documentation": {
        "left": "Configures cache control directives for a `Request`.\n"
      },
      "sortText": "130",
      "insertText": "RequestCacheControl",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResponseCacheControl",
      "kind": "Variable",
      "detail": "ResponseCacheControl",
      "documentation": {
        "left": "Configures cache control directives for a `Response`.\n"
      },
      "sortText": "130",
      "insertText": "ResponseCacheControl",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpCache",
      "kind": "Variable",
      "detail": "HttpCache",
      "documentation": {
        "left": "Implements a cache for storing HTTP responses. This cache complies with the caching policy set when configuring\nHTTP caching in the HTTP client endpoint.\n"
      },
      "sortText": "130",
      "insertText": "HttpCache",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CachingPolicy",
      "kind": "Variable",
      "detail": "CachingPolicy",
      "documentation": {
        "left": "Used for configuring the caching behaviour. Setting the `policy` field in the `CacheConfig` record allows\nthe user to control the caching behaviour."
      },
      "sortText": "130",
      "insertText": "CachingPolicy",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CacheConfig",
      "kind": "Variable",
      "detail": "CacheConfig",
      "documentation": {
        "left": "Provides a set of configurations for controlling the caching behaviour of the endpoint.\n"
      },
      "sortText": "130",
      "insertText": "CacheConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpCachingClient",
      "kind": "Variable",
      "detail": "HttpCachingClient",
      "documentation": {
        "left": "An HTTP caching client implementation which takes an `HttpActions` instance and wraps it with an HTTP caching layer.\n"
      },
      "sortText": "130",
      "insertText": "HttpCachingClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Client",
      "kind": "Variable",
      "detail": "Client",
      "documentation": {
        "left": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes functions for the standard HTTP methods, forwarding a received request and sending requests\nusing custom HTTP verbs."
      },
      "sortText": "130",
      "insertText": "Client",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TargetService",
      "kind": "Variable",
      "detail": "TargetService",
      "documentation": {
        "left": "Represents a single service and its related configurations.\n"
      },
      "sortText": "130",
      "insertText": "TargetService",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ClientHttp1Settings",
      "kind": "Variable",
      "detail": "ClientHttp1Settings",
      "documentation": {
        "left": "Provides settings related to HTTP/1.x protocol.\n"
      },
      "sortText": "130",
      "insertText": "ClientHttp1Settings",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ClientHttp2Settings",
      "kind": "Variable",
      "detail": "ClientHttp2Settings",
      "documentation": {
        "left": "Provides settings related to HTTP/2 protocol.\n"
      },
      "sortText": "130",
      "insertText": "ClientHttp2Settings",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RetryConfig",
      "kind": "Variable",
      "detail": "RetryConfig",
      "documentation": {
        "left": "Provides configurations for controlling the retrying behavior in failure scenarios.\n"
      },
      "sortText": "130",
      "insertText": "RetryConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ClientSecureSocket",
      "kind": "Variable",
      "detail": "ClientSecureSocket",
      "documentation": {
        "left": "Provides configurations for facilitating secure communication with a remote HTTP endpoint.\n"
      },
      "sortText": "130",
      "insertText": "ClientSecureSocket",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FollowRedirects",
      "kind": "Variable",
      "detail": "FollowRedirects",
      "documentation": {
        "left": "Provides configurations for controlling the endpoint's behaviour in response to HTTP redirect related responses.\n"
      },
      "sortText": "130",
      "insertText": "FollowRedirects",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ProxyConfig",
      "kind": "Variable",
      "detail": "ProxyConfig",
      "documentation": {
        "left": "Proxy server configurations to be used with the HTTP client endpoint.\n"
      },
      "sortText": "130",
      "insertText": "ProxyConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "OutboundAuthConfig",
      "kind": "Variable",
      "detail": "OutboundAuthConfig",
      "documentation": {
        "left": "The `OutboundAuthConfig` record can be used to configure the authentication mechanism used by the HTTP endpoint.\n"
      },
      "sortText": "130",
      "insertText": "OutboundAuthConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CookieConfig",
      "kind": "Variable",
      "detail": "CookieConfig",
      "documentation": {
        "left": "Client configuration for cookies.\n"
      },
      "sortText": "130",
      "insertText": "CookieConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Cookie",
      "kind": "Variable",
      "detail": "Cookie",
      "documentation": {
        "left": "Represents a Cookie.\n"
      },
      "sortText": "130",
      "insertText": "Cookie",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CookieStore",
      "kind": "Variable",
      "detail": "CookieStore",
      "documentation": {
        "left": "Represents the cookie store.\n"
      },
      "sortText": "130",
      "insertText": "CookieStore",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CookieClient",
      "kind": "Variable",
      "detail": "CookieClient",
      "documentation": {
        "left": "Provides the cookie functionality across HTTP client actions.\n"
      },
      "sortText": "130",
      "insertText": "CookieClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "PersistentCookieHandler",
      "kind": "Variable",
      "detail": "PersistentCookieHandler",
      "documentation": {
        "left": "The representation of a persistent cookie handler for managing persistent cookies."
      },
      "sortText": "130",
      "insertText": "PersistentCookieHandler",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpFuture",
      "kind": "Variable",
      "detail": "HttpFuture",
      "documentation": {
        "left": "Represents a 'future' that returns as a result of an asynchronous HTTP request submission.\nThis can be used as a reference to fetch the results of the submission."
      },
      "sortText": "130",
      "insertText": "HttpFuture",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "PushPromise",
      "kind": "Variable",
      "detail": "PushPromise",
      "documentation": {
        "left": "Represents an HTTP/2 `PUSH_PROMISE` frame.\n"
      },
      "sortText": "130",
      "insertText": "PushPromise",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpClient",
      "kind": "Variable",
      "detail": "HttpClient",
      "documentation": {
        "left": "Provides the HTTP actions for interacting with an HTTP server. Apart from the standard HTTP methods,\n`HttpClient.forward()` and `HttpClient.execute()` functions are provided. More complex and specific endpoint types\ncan be created by wrapping this generic HTTP actions implementation.\n"
      },
      "sortText": "130",
      "insertText": "HttpClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpTimeoutError",
      "kind": "Variable",
      "detail": "HttpTimeoutError",
      "documentation": {
        "left": "Defines a timeout error occurred during service invocation.\n"
      },
      "sortText": "130",
      "insertText": "HttpTimeoutError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "PoolConfiguration",
      "kind": "Variable",
      "detail": "PoolConfiguration",
      "documentation": {
        "left": "Configurations for managing HTTP client connection pool.\n"
      },
      "sortText": "130",
      "insertText": "PoolConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpVersion",
      "kind": "Variable",
      "detail": "HttpVersion",
      "documentation": {
        "left": "Defines the supported HTTP protocols.\n\n`HTTP_1_0`: HTTP/1.0 protocol\n`HTTP_1_1`: HTTP/1.1 protocol\n`HTTP_2_0`: HTTP/2.0 protocol"
      },
      "sortText": "130",
      "insertText": "HttpVersion",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Chunking",
      "kind": "Variable",
      "detail": "Chunking",
      "documentation": {
        "left": "Defines the possible values for the chunking configuration in HTTP services and clients.\n\n`AUTO`: If the payload is less than 8KB, content-length header is set in the outbound request/response,\n        otherwise chunking header is set in the outbound request/response\n`ALWAYS`: Always set chunking header in the response\n`NEVER`: Never set the chunking header even if the payload is larger than 8KB in the outbound request/response"
      },
      "sortText": "130",
      "insertText": "Chunking",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Compression",
      "kind": "Variable",
      "detail": "Compression",
      "documentation": {
        "left": "Options to compress using gzip or deflate.\n\n`AUTO`: When service behaves as a HTTP gateway inbound request/response accept-encoding option is set as the\n        outbound request/response accept-encoding/content-encoding option\n`ALWAYS`: Always set accept-encoding/content-encoding in outbound request/response\n`NEVER`: Never set accept-encoding/content-encoding header in outbound request/response"
      },
      "sortText": "130",
      "insertText": "Compression",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpOperation",
      "kind": "Variable",
      "detail": "HttpOperation",
      "documentation": {
        "left": "Defines the HTTP operations related to circuit breaker, failover and load balancer.\n\n`FORWARD`: Forward the specified payload\n`GET`: Request a resource\n`POST`: Create a new resource\n`DELETE`: Deletes the specified resource\n`OPTIONS`: Request communication options available\n`PUT`: Replace the target resource\n`PATCH`: Apply partial modification to the resource\n`HEAD`: Identical to `GET` but no resource body should be returned\n`SUBMIT`: Submits a http request and returns an HttpFuture object\n`NONE`: No operation should be performed"
      },
      "sortText": "130",
      "insertText": "HttpOperation",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Protocols",
      "kind": "Variable",
      "detail": "Protocols",
      "documentation": {
        "left": "A record for configuring SSL/TLS protocol and version to be used.\n"
      },
      "sortText": "130",
      "insertText": "Protocols",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ValidateCert",
      "kind": "Variable",
      "detail": "ValidateCert",
      "documentation": {
        "left": "A record for providing configurations for certificate revocation status checks.\n"
      },
      "sortText": "130",
      "insertText": "ValidateCert",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ListenerOcspStapling",
      "kind": "Variable",
      "detail": "ListenerOcspStapling",
      "documentation": {
        "left": "A record for providing configurations for certificate revocation status checks.\n"
      },
      "sortText": "130",
      "insertText": "ListenerOcspStapling",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CompressionConfig",
      "kind": "Variable",
      "detail": "CompressionConfig",
      "documentation": {
        "left": "A record for providing configurations for content compression.\n"
      },
      "sortText": "130",
      "insertText": "CompressionConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CommonClientConfiguration",
      "kind": "Variable",
      "detail": "CommonClientConfiguration",
      "documentation": {
        "left": "Common client configurations for the next level clients.\n"
      },
      "sortText": "130",
      "insertText": "CommonClientConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Caller",
      "kind": "Variable",
      "detail": "Caller",
      "documentation": {
        "left": "The caller actions for responding to client requests.\n"
      },
      "sortText": "130",
      "insertText": "Caller",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RedirectCode",
      "kind": "Variable",
      "detail": "RedirectCode",
      "documentation": {
        "left": "Defines the HTTP redirect codes as a type."
      },
      "sortText": "130",
      "insertText": "RedirectCode",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Detail",
      "kind": "Variable",
      "detail": "Detail",
      "documentation": {
        "left": "Holds the details of an HTTP error\n"
      },
      "sortText": "130",
      "insertText": "Detail",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FailoverAllEndpointsFailedError",
      "kind": "Variable",
      "detail": "FailoverAllEndpointsFailedError",
      "documentation": {
        "left": "Represents a client error that occurred due to all the failover endpoint failure"
      },
      "sortText": "130",
      "insertText": "FailoverAllEndpointsFailedError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FailoverActionFailedError",
      "kind": "Variable",
      "detail": "FailoverActionFailedError",
      "documentation": {
        "left": "Represents a client error that occurred due to failover action failure"
      },
      "sortText": "130",
      "insertText": "FailoverActionFailedError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "UpstreamServiceUnavailableError",
      "kind": "Variable",
      "detail": "UpstreamServiceUnavailableError",
      "documentation": {
        "left": "Represents a client error that occurred due to upstream service unavailability"
      },
      "sortText": "130",
      "insertText": "UpstreamServiceUnavailableError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AllLoadBalanceEndpointsFailedError",
      "kind": "Variable",
      "detail": "AllLoadBalanceEndpointsFailedError",
      "documentation": {
        "left": "Represents a client error that occurred due to all the load balance endpoint failure"
      },
      "sortText": "130",
      "insertText": "AllLoadBalanceEndpointsFailedError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AllRetryAttemptsFailed",
      "kind": "Variable",
      "detail": "AllRetryAttemptsFailed",
      "documentation": {
        "left": "Represents a client error that occurred due to all the the retry attempts failure"
      },
      "sortText": "130",
      "insertText": "AllRetryAttemptsFailed",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "IdleTimeoutError",
      "kind": "Variable",
      "detail": "IdleTimeoutError",
      "documentation": {
        "left": "Represents the error that triggered upon a request/response idle timeout"
      },
      "sortText": "130",
      "insertText": "IdleTimeoutError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AuthenticationError",
      "kind": "Variable",
      "detail": "AuthenticationError",
      "documentation": {
        "left": "Represents a listener error that occurred due to inbound request authentication failure"
      },
      "sortText": "130",
      "insertText": "AuthenticationError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AuthorizationError",
      "kind": "Variable",
      "detail": "AuthorizationError",
      "documentation": {
        "left": "Represents a listener error that occurred due to inbound request authorization failure"
      },
      "sortText": "130",
      "insertText": "AuthorizationError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InitializingOutboundRequestError",
      "kind": "Variable",
      "detail": "InitializingOutboundRequestError",
      "documentation": {
        "left": "Represents a client error that occurred due to outbound request initialization failure"
      },
      "sortText": "130",
      "insertText": "InitializingOutboundRequestError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WritingOutboundRequestHeadersError",
      "kind": "Variable",
      "detail": "WritingOutboundRequestHeadersError",
      "documentation": {
        "left": "Represents a client error that occurred while writing outbound request headers"
      },
      "sortText": "130",
      "insertText": "WritingOutboundRequestHeadersError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WritingOutboundRequestBodyError",
      "kind": "Variable",
      "detail": "WritingOutboundRequestBodyError",
      "documentation": {
        "left": "Represents a client error that occurred while writing outbound request entity body"
      },
      "sortText": "130",
      "insertText": "WritingOutboundRequestBodyError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InitializingInboundResponseError",
      "kind": "Variable",
      "detail": "InitializingInboundResponseError",
      "documentation": {
        "left": "Represents a client error that occurred due to inbound response initialization failure"
      },
      "sortText": "130",
      "insertText": "InitializingInboundResponseError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ReadingInboundResponseHeadersError",
      "kind": "Variable",
      "detail": "ReadingInboundResponseHeadersError",
      "documentation": {
        "left": "Represents a client error that occurred while reading inbound response headers"
      },
      "sortText": "130",
      "insertText": "ReadingInboundResponseHeadersError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ReadingInboundResponseBodyError",
      "kind": "Variable",
      "detail": "ReadingInboundResponseBodyError",
      "documentation": {
        "left": "Represents a client error that occurred while reading inbound response entity body"
      },
      "sortText": "130",
      "insertText": "ReadingInboundResponseBodyError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InitializingInboundRequestError",
      "kind": "Variable",
      "detail": "InitializingInboundRequestError",
      "documentation": {
        "left": "Represents a listener error that occurred due to inbound request initialization failure"
      },
      "sortText": "130",
      "insertText": "InitializingInboundRequestError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ReadingInboundRequestHeadersError",
      "kind": "Variable",
      "detail": "ReadingInboundRequestHeadersError",
      "documentation": {
        "left": "Represents a listener error that occurred while reading inbound request headers"
      },
      "sortText": "130",
      "insertText": "ReadingInboundRequestHeadersError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ReadingInboundRequestBodyError",
      "kind": "Variable",
      "detail": "ReadingInboundRequestBodyError",
      "documentation": {
        "left": "Represents a listener error that occurred while writing the inbound request entity body"
      },
      "sortText": "130",
      "insertText": "ReadingInboundRequestBodyError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InitializingOutboundResponseError",
      "kind": "Variable",
      "detail": "InitializingOutboundResponseError",
      "documentation": {
        "left": "Represents a listener error that occurred due to outbound response initialization failure"
      },
      "sortText": "130",
      "insertText": "InitializingOutboundResponseError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WritingOutboundResponseHeadersError",
      "kind": "Variable",
      "detail": "WritingOutboundResponseHeadersError",
      "documentation": {
        "left": "Represents a listener error that occurred while writing outbound response headers"
      },
      "sortText": "130",
      "insertText": "WritingOutboundResponseHeadersError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WritingOutboundResponseBodyError",
      "kind": "Variable",
      "detail": "WritingOutboundResponseBodyError",
      "documentation": {
        "left": "Represents a listener error that occurred while writing outbound response entity body"
      },
      "sortText": "130",
      "insertText": "WritingOutboundResponseBodyError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Initiating100ContinueResponseError",
      "kind": "Variable",
      "detail": "Initiating100ContinueResponseError",
      "documentation": {
        "left": "Represents an error that occurred due to 100 continue response initialization failure"
      },
      "sortText": "130",
      "insertText": "Initiating100ContinueResponseError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Writing100ContinueResponseError",
      "kind": "Variable",
      "detail": "Writing100ContinueResponseError",
      "documentation": {
        "left": "Represents an error that occurred while writing 100 continue response"
      },
      "sortText": "130",
      "insertText": "Writing100ContinueResponseError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InvalidCookieError",
      "kind": "Variable",
      "detail": "InvalidCookieError",
      "documentation": {
        "left": "Represents a cookie error that occurred when sending cookies in the response"
      },
      "sortText": "130",
      "insertText": "InvalidCookieError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "GenericClientError",
      "kind": "Variable",
      "detail": "GenericClientError",
      "documentation": {
        "left": "Represents a generic client error"
      },
      "sortText": "130",
      "insertText": "GenericClientError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "GenericListenerError",
      "kind": "Variable",
      "detail": "GenericListenerError",
      "documentation": {
        "left": "Represents a generic listener error"
      },
      "sortText": "130",
      "insertText": "GenericListenerError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "UnsupportedActionError",
      "kind": "Variable",
      "detail": "UnsupportedActionError",
      "documentation": {
        "left": "Represents a client error that occurred due to unsupported action invocation"
      },
      "sortText": "130",
      "insertText": "UnsupportedActionError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Http2ClientError",
      "kind": "Variable",
      "detail": "Http2ClientError",
      "documentation": {
        "left": "Represents an HTTP/2 client generic error"
      },
      "sortText": "130",
      "insertText": "Http2ClientError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "MaximumWaitTimeExceededError",
      "kind": "Variable",
      "detail": "MaximumWaitTimeExceededError",
      "documentation": {
        "left": "Represents a client error that occurred exceeding maximum wait time"
      },
      "sortText": "130",
      "insertText": "MaximumWaitTimeExceededError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "SslError",
      "kind": "Variable",
      "detail": "SslError",
      "documentation": {
        "left": "Represents a client error that occurred due to SSL failure"
      },
      "sortText": "130",
      "insertText": "SslError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CookieHandlingError",
      "kind": "Variable",
      "detail": "CookieHandlingError",
      "documentation": {
        "left": "Represents a cookie error that occurred when using the cookies"
      },
      "sortText": "130",
      "insertText": "CookieHandlingError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResiliencyError",
      "kind": "Variable",
      "detail": "ResiliencyError",
      "documentation": {
        "left": "Defines the resiliency error types that returned from client"
      },
      "sortText": "130",
      "insertText": "ResiliencyError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ClientAuthError",
      "kind": "Variable",
      "detail": "ClientAuthError",
      "documentation": {
        "left": "Defines the Auth error types that returned from client"
      },
      "sortText": "130",
      "insertText": "ClientAuthError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "OutboundRequestError",
      "kind": "Variable",
      "detail": "OutboundRequestError",
      "documentation": {
        "left": "Defines the client error types that returned while sending outbound request"
      },
      "sortText": "130",
      "insertText": "OutboundRequestError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InboundResponseError",
      "kind": "Variable",
      "detail": "InboundResponseError",
      "documentation": {
        "left": "Defines the client error types that returned while receiving inbound response"
      },
      "sortText": "130",
      "insertText": "InboundResponseError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "InboundRequestError",
      "kind": "Variable",
      "detail": "InboundRequestError",
      "documentation": {
        "left": "Defines the listener error types that returned while receiving inbound request"
      },
      "sortText": "130",
      "insertText": "InboundRequestError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "OutboundResponseError",
      "kind": "Variable",
      "detail": "OutboundResponseError",
      "documentation": {
        "left": "Defines the listener error types that returned while sending outbound response"
      },
      "sortText": "130",
      "insertText": "OutboundResponseError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ClientError",
      "kind": "Variable",
      "detail": "ClientError",
      "documentation": {
        "left": "Defines the possible client error types"
      },
      "sortText": "130",
      "insertText": "ClientError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ListenerError",
      "kind": "Variable",
      "detail": "ListenerError",
      "documentation": {
        "left": "Defines the possible listener error types"
      },
      "sortText": "130",
      "insertText": "ListenerError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RequestFilter",
      "kind": "Variable",
      "detail": "RequestFilter",
      "documentation": {
        "left": "Abstract Representation of a HTTP Request Filter.\nThis filter will be applied before the request is dispatched to the relevant resource.\nAny RequestFilter implementation should be structurally similar to or implement the RequestFilter object."
      },
      "sortText": "130",
      "insertText": "RequestFilter",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResponseFilter",
      "kind": "Variable",
      "detail": "ResponseFilter",
      "documentation": {
        "left": "Abstract Representation of a HTTP Response Filter.\nThis filter will be applied in the response path.\nAny ResponseFilter implementation should be structurally similar to or implement the ResponseFilter object."
      },
      "sortText": "130",
      "insertText": "ResponseFilter",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FilterContext",
      "kind": "Variable",
      "detail": "FilterContext",
      "documentation": {
        "left": "Representation of request filter Context.\n"
      },
      "sortText": "130",
      "insertText": "FilterContext",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Request",
      "kind": "Variable",
      "detail": "Request",
      "documentation": {
        "left": "Represents an HTTP request.\n"
      },
      "sortText": "130",
      "insertText": "Request",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "MutualSslHandshake",
      "kind": "Variable",
      "detail": "MutualSslHandshake",
      "documentation": {
        "left": "A record for providing mutual SSL handshake results.\n"
      },
      "sortText": "130",
      "insertText": "MutualSslHandshake",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "MutualSslStatus",
      "kind": "Variable",
      "detail": "MutualSslStatus",
      "documentation": {
        "left": "Defines the possible values for the mutual ssl status.\n\n`passed`: Mutual SSL handshake is successful.\n`failed`: Mutual SSL handshake has failed."
      },
      "sortText": "130",
      "insertText": "MutualSslStatus",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Response",
      "kind": "Variable",
      "detail": "Response",
      "documentation": {
        "left": "Represents an HTTP response.\n"
      },
      "sortText": "130",
      "insertText": "Response",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "HttpSecureClient",
      "kind": "Variable",
      "detail": "HttpSecureClient",
      "documentation": {
        "left": "Provides secure HTTP remote functions for interacting with HTTP endpoints. This will make use of the authentication\nschemes configured in the HTTP client endpoint to secure the HTTP requests.\n"
      },
      "sortText": "130",
      "insertText": "HttpSecureClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "MockListener",
      "kind": "Variable",
      "detail": "MockListener",
      "documentation": {
        "left": "Mock server endpoint which does not open a listening port."
      },
      "sortText": "130",
      "insertText": "MockListener",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RedirectClient",
      "kind": "Variable",
      "detail": "RedirectClient",
      "documentation": {
        "left": "Provides redirect functionality for HTTP client remote functions.\n"
      },
      "sortText": "130",
      "insertText": "RedirectClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FailoverConfig",
      "kind": "Variable",
      "detail": "FailoverConfig",
      "documentation": {
        "left": "Provides a set of configurations for controlling the failover behaviour of the endpoint.\n"
      },
      "sortText": "130",
      "insertText": "FailoverConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FailoverInferredConfig",
      "kind": "Variable",
      "detail": "FailoverInferredConfig",
      "documentation": {
        "left": "Represents the inferred failover configurations passed into the failover client.\n"
      },
      "sortText": "130",
      "insertText": "FailoverInferredConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FailoverClient",
      "kind": "Variable",
      "detail": "FailoverClient",
      "documentation": {
        "left": "An HTTP client endpoint which provides failover support over multiple HTTP clients.\n"
      },
      "sortText": "130",
      "insertText": "FailoverClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "FailoverClientConfiguration",
      "kind": "Variable",
      "detail": "FailoverClientConfiguration",
      "documentation": {
        "left": "Provides a set of HTTP related configurations and failover related configurations.\n\nhttpVersion - Copied from CommonClientConfiguration\nhttp1Settings - Copied from CommonClientConfiguration\nhttp2Settings - Copied from CommonClientConfiguration\ntimeoutInMillis - Copied from CommonClientConfiguration\nforwarded - Copied from CommonClientConfiguration\nfollowRedirects - Copied from CommonClientConfiguration\npoolConfig - Copied from CommonClientConfiguration\ncache - Copied from CommonClientConfiguration\ncompression - Copied from CommonClientConfiguration\nauth - Copied from CommonClientConfiguration\ncircuitBreaker - Copied from CommonClientConfiguration\nretryConfig - Copied from CommonClientConfiguration\ncookieConfig - Copied from CommonClientConfiguration"
      },
      "sortText": "130",
      "insertText": "FailoverClientConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CircuitState",
      "kind": "Variable",
      "detail": "CircuitState",
      "documentation": {
        "left": "A finite type for modeling the states of the Circuit Breaker. The Circuit Breaker starts in the `CLOSED` state.\nIf any failure thresholds are exceeded during execution, the circuit trips and goes to the `OPEN` state. After\nthe specified timeout period expires, the circuit goes to the `HALF_OPEN` state. If the trial request sent while\nin the `HALF_OPEN` state succeeds, the circuit goes back to the `CLOSED` state."
      },
      "sortText": "130",
      "insertText": "CircuitState",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CircuitHealth",
      "kind": "Variable",
      "detail": "CircuitHealth",
      "documentation": {
        "left": "Maintains the health of the Circuit Breaker.\n"
      },
      "sortText": "130",
      "insertText": "CircuitHealth",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CircuitBreakerConfig",
      "kind": "Variable",
      "detail": "CircuitBreakerConfig",
      "documentation": {
        "left": "Provides a set of configurations for controlling the behaviour of the Circuit Breaker.\n"
      },
      "sortText": "130",
      "insertText": "CircuitBreakerConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RollingWindow",
      "kind": "Variable",
      "detail": "RollingWindow",
      "documentation": {
        "left": "Represents a rolling window in the Circuit Breaker.\n"
      },
      "sortText": "130",
      "insertText": "RollingWindow",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Bucket",
      "kind": "Variable",
      "detail": "Bucket",
      "documentation": {
        "left": "Represents a discrete sub-part of the time window (Bucket).\n"
      },
      "sortText": "130",
      "insertText": "Bucket",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CircuitBreakerInferredConfig",
      "kind": "Variable",
      "detail": "CircuitBreakerInferredConfig",
      "documentation": {
        "left": "Derived set of configurations from the `CircuitBreakerConfig`.\n"
      },
      "sortText": "130",
      "insertText": "CircuitBreakerInferredConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "CircuitBreakerClient",
      "kind": "Variable",
      "detail": "CircuitBreakerClient",
      "documentation": {
        "left": "A Circuit Breaker implementation which can be used to gracefully handle network failures.\n"
      },
      "sortText": "130",
      "insertText": "CircuitBreakerClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "LoadBalancerRule",
      "kind": "Variable",
      "detail": "LoadBalancerRule",
      "documentation": {
        "left": "\nLoadBalancerRule provides a required interfaces to implement different algorithms.\n"
      },
      "sortText": "130",
      "insertText": "LoadBalancerRule",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RetryInferredConfig",
      "kind": "Variable",
      "detail": "RetryInferredConfig",
      "documentation": {
        "left": "Derived set of configurations from the `RetryConfig`.\n"
      },
      "sortText": "130",
      "insertText": "RetryInferredConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RetryClient",
      "kind": "Variable",
      "detail": "RetryClient",
      "documentation": {
        "left": "Provides the HTTP remote functions for interacting with an HTTP endpoint. This is created by wrapping the HTTP client\nto provide retrying over HTTP requests.\n"
      },
      "sortText": "130",
      "insertText": "RetryClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "LoadBalancerRoundRobinRule",
      "kind": "Variable",
      "detail": "LoadBalancerRoundRobinRule",
      "documentation": {
        "left": "Implementation of round robin load balancing strategy.\n"
      },
      "sortText": "130",
      "insertText": "LoadBalancerRoundRobinRule",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "LoadBalanceClient",
      "kind": "Variable",
      "detail": "LoadBalanceClient",
      "documentation": {
        "left": "LoadBalanceClient endpoint provides load balancing functionality over multiple HTTP clients.\n"
      },
      "sortText": "130",
      "insertText": "LoadBalanceClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "LoadBalanceActionErrorData",
      "kind": "Variable",
      "detail": "LoadBalanceActionErrorData",
      "documentation": {
        "left": "Represents an error occurred in an remote function of the Load Balance connector.\n"
      },
      "sortText": "130",
      "insertText": "LoadBalanceActionErrorData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "LoadBalanceActionError",
      "kind": "Variable",
      "detail": "LoadBalanceActionError",
      "sortText": "130",
      "insertText": "LoadBalanceActionError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "LoadBalanceClientConfiguration",
      "kind": "Variable",
      "detail": "LoadBalanceClientConfiguration",
      "documentation": {
        "left": "The configurations related to the load balance client endpoint.\n\nhttpVersion - Copied from CommonClientConfiguration\nhttp1Settings - Copied from CommonClientConfiguration\nhttp2Settings - Copied from CommonClientConfiguration\ntimeoutInMillis - Copied from CommonClientConfiguration\nforwarded - Copied from CommonClientConfiguration\nfollowRedirects - Copied from CommonClientConfiguration\npoolConfig - Copied from CommonClientConfiguration\ncache - Copied from CommonClientConfiguration\ncompression - Copied from CommonClientConfiguration\nauth - Copied from CommonClientConfiguration\ncircuitBreaker - Copied from CommonClientConfiguration\nretryConfig - Copied from CommonClientConfiguration\ncookieConfig - Copied from CommonClientConfiguration"
      },
      "sortText": "130",
      "insertText": "LoadBalanceClientConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Listener",
      "kind": "Variable",
      "detail": "Listener",
      "documentation": {
        "left": "This is used for creating HTTP server endpoints. An HTTP server endpoint is capable of responding to\nremote callers. The `Listener` is responsible for initializing the endpoint using the provided configurations."
      },
      "sortText": "130",
      "insertText": "Listener",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Remote",
      "kind": "Variable",
      "detail": "Remote",
      "documentation": {
        "left": "Presents a read-only view of the remote address.\n"
      },
      "sortText": "130",
      "insertText": "Remote",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Local",
      "kind": "Variable",
      "detail": "Local",
      "documentation": {
        "left": "Presents a read-only view of the local address.\n"
      },
      "sortText": "130",
      "insertText": "Local",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ListenerConfiguration",
      "kind": "Variable",
      "detail": "ListenerConfiguration",
      "documentation": {
        "left": "Provides a set of configurations for HTTP service endpoints.\n"
      },
      "sortText": "130",
      "insertText": "ListenerConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ListenerHttp1Settings",
      "kind": "Variable",
      "detail": "ListenerHttp1Settings",
      "documentation": {
        "left": "Provides settings related to HTTP/1.x protocol.\n"
      },
      "sortText": "130",
      "insertText": "ListenerHttp1Settings",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ListenerAuth",
      "kind": "Variable",
      "detail": "ListenerAuth",
      "documentation": {
        "left": "Authentication configurations for the listener.\n"
      },
      "sortText": "130",
      "insertText": "ListenerAuth",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ListenerSecureSocket",
      "kind": "Variable",
      "detail": "ListenerSecureSocket",
      "documentation": {
        "left": "Configures the SSL/TLS options to be used for HTTP service.\n"
      },
      "sortText": "130",
      "insertText": "ListenerSecureSocket",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "KeepAlive",
      "kind": "Variable",
      "detail": "KeepAlive",
      "documentation": {
        "left": "Defines the possible values for the keep-alive configuration in service and client endpoints."
      },
      "sortText": "130",
      "insertText": "KeepAlive",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketCaller",
      "kind": "Variable",
      "detail": "WebSocketCaller",
      "documentation": {
        "left": "Represents a WebSocket caller."
      },
      "sortText": "130",
      "insertText": "WebSocketCaller",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketClient",
      "kind": "Variable",
      "detail": "WebSocketClient",
      "documentation": {
        "left": "Represents a WebSocket client endpoint."
      },
      "sortText": "130",
      "insertText": "WebSocketClient",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketClientConfiguration",
      "kind": "Variable",
      "detail": "WebSocketClientConfiguration",
      "documentation": {
        "left": "Configuration for the WebSocket client endpoint.\n"
      },
      "sortText": "130",
      "insertText": "WebSocketClientConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketRetryConfig",
      "kind": "Variable",
      "detail": "WebSocketRetryConfig",
      "documentation": {
        "left": "Retry configurations for WebSocket.\n"
      },
      "sortText": "130",
      "insertText": "WebSocketRetryConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsConnectionClosureError",
      "kind": "Variable",
      "detail": "WsConnectionClosureError",
      "documentation": {
        "left": "Raised during failures in connection closure"
      },
      "sortText": "130",
      "insertText": "WsConnectionClosureError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsInvalidHandshakeError",
      "kind": "Variable",
      "detail": "WsInvalidHandshakeError",
      "documentation": {
        "left": "Raised during the handshake when the WebSocket upgrade fails"
      },
      "sortText": "130",
      "insertText": "WsInvalidHandshakeError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsPayloadTooBigError",
      "kind": "Variable",
      "detail": "WsPayloadTooBigError",
      "documentation": {
        "left": "Raised when receiving a frame with a payload exceeding the maximum size"
      },
      "sortText": "130",
      "insertText": "WsPayloadTooBigError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsProtocolError",
      "kind": "Variable",
      "detail": "WsProtocolError",
      "documentation": {
        "left": "Raised when the other side breaks the protocol"
      },
      "sortText": "130",
      "insertText": "WsProtocolError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsConnectionError",
      "kind": "Variable",
      "detail": "WsConnectionError",
      "documentation": {
        "left": "Raised during connection failures"
      },
      "sortText": "130",
      "insertText": "WsConnectionError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsInvalidContinuationFrameError",
      "kind": "Variable",
      "detail": "WsInvalidContinuationFrameError",
      "documentation": {
        "left": "Raised when an out of order/invalid continuation frame is received"
      },
      "sortText": "130",
      "insertText": "WsInvalidContinuationFrameError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WsGenericError",
      "kind": "Variable",
      "detail": "WsGenericError",
      "documentation": {
        "left": "Raised for errors not captured by the specific errors"
      },
      "sortText": "130",
      "insertText": "WsGenericError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketError",
      "kind": "Variable",
      "detail": "WebSocketError",
      "documentation": {
        "left": "The union of all the WebSocket related errors"
      },
      "sortText": "130",
      "insertText": "WebSocketError",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AuthnFilter",
      "kind": "Variable",
      "detail": "AuthnFilter",
      "documentation": {
        "left": "Representation of the Authentication filter.\n"
      },
      "sortText": "130",
      "insertText": "AuthnFilter",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AuthzFilter",
      "kind": "Variable",
      "detail": "AuthzFilter",
      "documentation": {
        "left": "Representation of the Authorization filter.\n"
      },
      "sortText": "130",
      "insertText": "AuthzFilter",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "BasicAuthHandler",
      "kind": "Variable",
      "detail": "BasicAuthHandler",
      "documentation": {
        "left": "Defines the Basic Auth header handler for inbound and outbound HTTP traffic.\n"
      },
      "sortText": "130",
      "insertText": "BasicAuthHandler",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "BearerAuthHandler",
      "kind": "Variable",
      "detail": "BearerAuthHandler",
      "documentation": {
        "left": "Representation of the Bearer Auth header handler for both inbound and outbound HTTP traffic.\n"
      },
      "sortText": "130",
      "insertText": "BearerAuthHandler",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ClientConfiguration",
      "kind": "Variable",
      "detail": "ClientConfiguration",
      "documentation": {
        "left": "Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.\n\nhttpVersion - Copied from CommonClientConfiguration\nhttp1Settings - Copied from CommonClientConfiguration\nhttp2Settings - Copied from CommonClientConfiguration\ntimeoutInMillis - Copied from CommonClientConfiguration\nforwarded - Copied from CommonClientConfiguration\nfollowRedirects - Copied from CommonClientConfiguration\npoolConfig - Copied from CommonClientConfiguration\ncache - Copied from CommonClientConfiguration\ncompression - Copied from CommonClientConfiguration\nauth - Copied from CommonClientConfiguration\ncircuitBreaker - Copied from CommonClientConfiguration\nretryConfig - Copied from CommonClientConfiguration\ncookieConfig - Copied from CommonClientConfiguration"
      },
      "sortText": "130",
      "insertText": "ClientConfiguration",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RequestMessage",
      "kind": "Variable",
      "detail": "RequestMessage",
      "documentation": {
        "left": "The types of messages that are accepted by HTTP `client` when sending out the outbound request."
      },
      "sortText": "130",
      "insertText": "RequestMessage",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResponseMessage",
      "kind": "Variable",
      "detail": "ResponseMessage",
      "documentation": {
        "left": "The types of messages that are accepted by HTTP `listener` when sending out the outbound response."
      },
      "sortText": "130",
      "insertText": "ResponseMessage",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ServiceConfig",
      "kind": "Variable",
      "detail": "ServiceConfig",
      "sortText": "130",
      "insertText": "ServiceConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "WebSocketServiceConfig",
      "kind": "Variable",
      "detail": "WebSocketServiceConfig",
      "sortText": "130",
      "insertText": "WebSocketServiceConfig",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResourceConfig",
      "kind": "Variable",
      "detail": "ResourceConfig",
      "sortText": "130",
      "insertText": "ResourceConfig",
      "insertTextFormat": "Snippet"
    }
  ]
}
